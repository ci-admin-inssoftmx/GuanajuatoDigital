
@model GuanajuatoAdminUsuarios.Models.FirmasModel
@{
    @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
    var listaIdsPermitidosJson = @HttpContextAccessor.HttpContext.Session.GetString("IdsPermitidos").ToString();
    var autorizaciones = @HttpContextAccessor.HttpContext.Session.GetString("Autorizaciones").ToString();
}

<script>

    $(document).ready(function () {
        var access = @listaIdsPermitidosJson;
        if (access != undefined && access != '') {
            if (!access.toString().includes(localStorage.getItem("menuId"))) {
                Swal.fire({
                    icon: "error",
                    title: "¡EL usuario no tiene acceso a esta opción!"
                });
                setTimeout(() => {
                    window.location.href = "/Principal";
                }, 200);
            }
        } else {
            Swal.fire({
                icon: "error",
                title: "¡EL usuario no tiene acceso a esta opción!"
            });
            setTimeout(() => {
                window.location.href = "/Principal";
            }, 200);
        }
    });

</script>

<div class="mainContainer bg-light">

    <section class="mx-md-3 mx-lg-4 mx-xl-5 bg-white boxShadow my-5 rounded">
        <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
            <div class="col-12 col-md-auto">
                <div class="row align-items-center justify-content-center justify-content-md-start">
                    <div class="col-auto">
                        <i class="icon-editFirma h1 colorPrimary"></i>
                    </div>
                    <div class="col-auto my-3">
                        <h2 class="m-0 h3"><b>Editar firma</b></h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="bg-light py-1"></div>
            </div>
        </div>
        <div class="col-12 col-md-auto mt-4 mb-2">
            <h5 class="px-4"><b>Datos de firma</b></h5>
            <h6 class="px-4 text-muted">Completa los datos obligatorios para guardar la firma.</h6>
        </div>
        <div class="col-12">
            <div class="row">
                <div class="col-12 col-md-auto mt-4 mb-2">
                    <h5 class="px-4">Dependencia:</h5>
                    <h6 class="px-4 text-muted"><b>@(Model.DependenciaNombre)</b></h6>
                </div>
                <div class="col-12 col-md-auto mt-4 mb-2">
                    <h5 class="px-4">Formato de recepcion de firma:</h5>
                    <h6 id="NameFile" class="px-4 text-muted"><b>@(Model.FileUrl)</b></h6>
                </div>
                <div class="col-12 col-md-auto mt-4 mb-2">
                    <h5 class="px-4"></h5>
                    <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                        <div onclick="document.getElementById('fileInput').click();">
                            <button id="btnGuardarFirmaFile">
                                <h6 class="m-0 d-flex align-items-center">
                                    <i class="icon-edit h5 mb-0 me-2"></i><b>Editar</b>
                                </h6>
                            </button>
                        </div>
                    </div>
                    <input type="file" name="myFile" id="fileInput" class="drop-zone__input">
                </div>
            </div>
        </div>
        <form id="nuevaFirmaForm" class="row px-4 align-items-end" enctype="multipart/form-data">
            <input type="text" name="id" id="id" class="drop-zone__input" value="@(Model.Id)">
            <div class="col-12">
                <div class="row">
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                        <div class="controlForm my-3">
                             <label>Cargo <b>(obligatorio)</b>:</label>
                            <span>
                                @(Html.Kendo().DropDownListFor(t => t.IdPuesto).Filter(FilterType.Contains)
                                    .NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel("Selecciona un cargo")
                                    .HtmlAttributes(new { style = "width: 100%" })
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetAllPuestosActivos", "Catalogos");
                                        });
                                    })
                                    )
                            </span>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                        <div class="controlForm my-3" style="height: auto;">
                            <label>Nombre <b>(obligatorio)</b>:</label>
                            <div class="input-group">
                                <input autocomplete="off" type="text" id="Nombre" name="Nombre" class="form-control" style="height: 3.5em;" placeholder="Ingrese nombre completo" value="@(Model.Nombre)" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                        <div class="controlForm mb-3">
                            <label>Fecha inicio <b>(obligatorio)</b>:</label>
                            <span>
                                @(Html.Kendo().DatePicker()
                                    .Value(DateTime.ParseExact(Model.FechaInicio, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture))
                                    .Name("FechaInicio")
                                    .Min(DateTime.Today)
                                    .Culture("es-ES")
                                    .Format("dd/MM/yyyy")
                                    .HtmlAttributes(new
                                    {
                                        style = "width: 100%",
                                        id = "FechaInicio",
                                        placeholder = "Fecha de inicio",
                                        onkeydown = "fechaKeyDown(event)"
                                    })
                                    .Events(e =>
                                    {
                                        e.Change("cambiaFechaInicio");
                                    }))
                            </span>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                        <div class="controlForm mb-3">
                            <label>Fecha fin de vigencia <b>(obligatorio)</b>:</label>
                            <span>
                                @(Html.Kendo().DatePicker()
                                    .Value(DateTime.ParseExact(Model.FechaFin, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture))
                                    .Name("FechaFin")
                                    .Min(DateTime.Today.AddDays(1))
                                    .Culture("es-ES")
                                    .Format("dd/MM/yyyy")
                                    .HtmlAttributes(new
                                    {
                                        style = "width: 100%",
                                        id = "FechaFin",
                                        placeholder = "Fecha de vigencia",
                                        onkeydown = "fechaKeyDown(event)"
                                    })
                                    )
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12">
                <div class="row">
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                        <div class="controlForm mb-3">
                            <label>Estado <b>(obligatorio)</b>:</label>
                            <div class="col-12 col-lg-12 my-4">
                                <div class="row justify-content-center btnToggleActive">
                                    <div class="btnToggle col-12">
                                        @(Html.Kendo().Switch()
                                            .Name("Estatus")
                                            .Checked(Model.EstatusNumero == 1)
                                            .Messages(c => c.Checked("Activo").Unchecked("Inactivo"))
                                            .HtmlAttributes(new { id = "EstatusNumero", data_valor = Model.EstatusNumero })
                                            )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="row px-4 justify-content-center mb-3">
            <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                <div class="controlButton my-3" onclick="cancelarGuardarFirma()">
                    @(Html.Kendo().Button()
                        .Name("CancelUpdateFirma")
                        .HtmlAttributes(new { @class = "btnSecondary" })
                        .Content("<h5 class=\"m-0\"><b>Cancelar</b></h5>"))
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                <div class="controlButton my-3" onclick="guardarFirma()">
                    @(Html.Kendo().Button()
                    .Name("UpdateFirma")
                    .HtmlAttributes(new { @class = "btnPrimary" })
                    .Content("<h5 class=\"m-0\"><b>Guardar</b></h5>"))
                </div>
            </div>       
        </div>
    </section>
</div>

 <script>

     document.getElementById('fileInput').onchange = function (event) {
         var file = event.target.files[0];
         var reader = new FileReader();

         reader.onload = function (e) {
             $("#NameFile").empty().append(file.name)
         };

         reader.readAsDataURL(file);
     };

     function cancelarGuardarFirma() {
         window.location.href = '/Firmas/Index';
     }

     function guardarFirma() {
         var myData = new FormData($("#nuevaFirmaForm").get(0));
         var file = document.getElementById('fileInput').files[0];
         myData.append('file', file);

         for (const value of myData.values()) {
             console.log(value);
         }

         var controlsValidate = [];
         var isValid = true;

         controlsValidate.push({ 'controlName': 'Nombre' });
         controlsValidate.push({ 'controlName': 'FechaInicio' });
         controlsValidate.push({ 'controlName': 'FechaFin' });

         // INPUTS
         if (!isControlsValid(controlsValidate)) { isValid = false; }

         // DROP DOWN LIST
         controlsValidate = [];
         controlsValidate.push({ 'controlName': 'IdPuesto' });

         if (!isControlsValidDropDown(controlsValidate)) { isValid = false; }

         if (!isValid) {
             sitteg_warning('Hacen falta datos o existen datos incorrectos, favor de verificar.');
             return;
         }
         showLoading();
         $.ajax({
             url: '/Firmas/ActualizarFirma',
             type: 'POST',
             data: myData,
             processData: false,
             contentType: false,
             success: function (result) {
                 if (result.success) {
                     sitteg_success("Se actualizo un registro de firma");
                     window.location.href = '/Firmas/Index'
                 } else {
                     console.log(result.errors);
                     sitteg_warning("Ocurrieron los siguientes errores:\n" + result.message);
                 }
                 hideLoading();
             }, error: function (xhr, status, error) {
                 console.log(error);
                 sitteg_warning("Ocurrio un error al procesar su solicitud.");
                 hideLoading();
             }
         });
     }

     function cambiaFechaInicio() {
         var datePickerControl = $("#FechaFin").data("kendoDatePicker");
         var fechaSeleccionada = new Date(this.value());
         var currentDate = new Date();
         fechaSeleccionada.setDate(fechaSeleccionada.getDate() + 1);
         if (fechaSeleccionada.getFullYear() < currentDate.getFullYear()) {
             currentDate.setDate(currentDate.getDate() + 1);
         }
         datePickerControl.value("");
         datePickerControl.min(fechaSeleccionada.getFullYear() < currentDate.getFullYear() ? currentDate : fechaSeleccionada);
     }

     function fechaKeyDown(e) {
         var value = e.target.value
         var key = e.key
         var keyCode = e.keyCode
         var pattern = /^[0-3]([0-9](\/([0-1]([0-9](\/([1-2]([0-9]([0-9]([0-9])?)?)?)?)?)?)?)?)?$/
         var date = value + key
         var can = pattern.test(date)
         if ([8, 46, 37, 38, 39, 40, 9].indexOf(keyCode) != -1) {
             return
         }
         if (can) {
             if (date.length == 10) {
                 var splDate = date.split('/')
                 var newDate = new Date(parseInt(splDate[2]), parseInt(splDate[1]) - 1, parseInt(splDate[0]))
                 var day = newDate.getDate() < 10 ? "0" + newDate.getDate() : newDate.getDate()
                 var month = newDate.getMonth() < 9 ? "0" + (parseInt(newDate.getMonth()) + parseInt(1)) : (parseInt(newDate.getMonth()) + parseInt(1))
                 var year = newDate.getFullYear()
                 var newStringDate = `${day}/${month}/${year}`
                 if (day == splDate[0] && month == splDate[1] && year == splDate[2]) {
                     var NowStr = $("#" + e.target.id).data("kendoDatePicker").dateView._current
                     console.log(NowStr)
                     var selectetDay = new Date(parseInt(year), parseInt(month) - 1, parseInt(day))
                     if (selectetDay > NowStr) {
                         $("#FechaPago").val("")
                         e.preventDefault()
                     }
                 }
                 else {
                     $("#FechaPago").val("")
                     e.preventDefault()
                 }
             } else if (date.length > 10) e.preventDefault()
             return
         }
         e.preventDefault()
     }

   </script>