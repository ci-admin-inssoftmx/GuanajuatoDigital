@using NavigationFlow = GuanajuatoAdminUsuarios.Models.NavigationFlow;
@model PersonaModel
@{
    string currentNavigationFlow = ViewBag.NavigationFlow;
    int esConductor = ViewBag.esConductor != null ? (int)ViewBag.esConductor : 0; 
    bool desactivar = esConductor == 1;
    Layout = null;
    var tp2 = (Model.idCatTipoPersona != null) ? Model.idCatTipoPersona : 1;
}
  
@functions {
    string ObtenerValorSeguro(object obj, string propiedad)
    {
        if (obj == null) return string.Empty;

        var propiedades = propiedad.Split('.');
        object valor = obj;

        foreach (var p in propiedades)
        {
            var infoPropiedad = valor?.GetType().GetProperty(p);
            if (infoPropiedad == null) return string.Empty;

            valor = infoPropiedad.GetValue(valor);
            if (valor == null) return string.Empty;
        }

        // Verificar si el valor es de tipo DateTime y formatear adecuadamente
        if (valor is DateTime fecha)
        {
            return fecha.ToString("dd/MM/yyyy");
        }

        return valor?.ToString() ?? string.Empty;
    }

}
<script>
    console.log('@ObtenerValorSeguro(Model, "Persona.idCatTipoPersona")');
    var tp = @((Model.idCatTipoPersona != null) ? Model.idCatTipoPersona : 1);
   

    $(document).ready(function () {
        if (tp == 2) {
            $('#ap').hide();
            $('#am').hide();
            $('#fn').hide();
            $('#cr').hide();
            $('#gn').hide();
            $('#nl').hide();
            $('#tl').hide();
            $('#vg').hide();
            $('#fv').hide();
            
        }
        

    });

</script>
<script>
    function onDatePickerChange(e) {
        var datePicker = e.sender;
        var selectedDate = datePicker.value();

        // Verificar si la fecha seleccionada es la fecha predeterminada
        if (selectedDate && selectedDate.getFullYear() == 1 && selectedDate.getMonth() == 0 && selectedDate.getDate() == 1) {
            datePicker.value(null); // Si es la fecha predeterminada, establecer el valor del DatePicker como nulo
        }
    }
    function EntidadDropDownChange() {
        var entidadDDlValue = $("#idEntidadED").data("kendoDropDownList").value();

        showLoading();
        $.ajax({
            url: "/Personas/Municipios_Drop",
            type: "POST",
            data: { entidadDDlValue: entidadDDlValue },
            success: function (data) {
                var municipiosDropDown = $("#idMunicipioED").data("kendoDropDownList");

                var idMunicipio = @((Model.PersonaDireccion!=null &&  Model.PersonaDireccion.idMunicipio != null) ? Model.PersonaDireccion.idMunicipio : 0);
                console.log("MUN", idMunicipio)
                municipiosDropDown.dataSource.data(data);

                if (idMunicipio !== null && idMunicipio !== undefined &&
                    data.some(item => item.Value == idMunicipio.toString())) {
                    municipiosDropDown.value(idMunicipio.toString());
                }

                hideLoading();
            },
            error: function (xhr, status, error) {
                hideLoading();
            }
        });
    }


    function filterMunicipios() {
        return {
            entidadDDlValue: $("#idEntidadED").data("kendoDropDownList").value()
        };
    }
</script>
<div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
    <div class="col-auto pe-0">
        <div class="row align-items-center justify-content-center justify-content-md-start">
            <div class="col-auto pe-0">
                <i class="icon-editFisica h1 colorPrimary"></i>
            </div>
            <div class="col-auto my-3">
                <h2 class="m-0 h3"><b>Editar Persona</b></h2>
            </div>
        </div>
    </div>
    <div class="col-auto">
        <div class="row">
            <div class="col-auto my-3">
                <button type="button" class="btn-close" onclick="Cloce()"></button>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="bg-light py-1"></div>
    </div>
</div>
<form id="frmEditarPersona">
    <div class="row px-4 mb-4 align-items-end justify-content-center">
    @Html.HiddenFor(m=> m.idPersona)
    @Html.HiddenFor(m=> m.PersonaDireccion.idPersona)
    @Html.HiddenFor(m=> m.PersonaDireccion.idPersonasDirecciones)
    <input class="d-none" id="percan" name="percan" value="@ViewBag.UpdatePermanencia" />
    <input class="d-none" id="Ope" name="Ope" value="@ViewBag.Ope" />
    <input class="d-none" id="IsCon" name="IsCom" value="@ViewBag.esConductor" />

    <div class="row px-4 mb-4 align-items-end my-2">
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Nombre <b>(obligatorio)</b>:</label>

                @(Html.Kendo().TextBoxFor(t => t.nombre)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;", required = "required" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="ap">
            <div class="controlForm my-3">
                <label>Apellido paterno:</label>
                @(Html.Kendo().TextBoxFor(t => t.apellidoPaterno)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="am">
            <div class="controlForm my-3">
                <label>Apellido materno:</label>
                @(Html.Kendo().TextBoxFor(t => t.apellidoMaterno)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="fn">
            <div class="controlForm my-3">
                <label>Fecha de nacimiento:</label>
                @(Html.Kendo().DatePickerFor(t => t.fechaNacimiento).Max(DateTime.Now)
                    .Culture("es-ES")
                    .HtmlAttributes(new { style = "width: 100%;", onkeydown = "testKeyDown(event)" })

                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="cr">
            <div class="controlForm my-3">
                <label>CURP:</label>
                @(Html.Kendo().TextBoxFor(t => t.CURP)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;", onkeydown = "validaCurp(event)" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>RFC:</label>
                @(Html.Kendo().TextBoxFor(t => t.RFC)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;", onkeydown = "validaRfc(event)" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="gn">
            <div class="controlForm my-3">
                <label>Género <b>(obligatorio)</b>:</label>
                @(Html.Kendo().DropDownListFor(m => m.idGenero).Filter(FilterType.Contains).NoDataTemplate("No se encontraron datos")
                    .BindTo((SelectList)ViewBag.CatGeneros)
                    .OptionLabel("-- Seleccione --")
                    
                    .HtmlAttributes(new { style = "width:100%;", id = "id_genero_help", required=true })
                    .Popup(p =>
                    {
                        p.AppendTo("#frmEditarPersona");
                    }))
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Tipo persona  <b>(obligatorio)</b>:</label>
                @(Html.Kendo().DropDownListFor(m => m.idCatTipoPersona).Filter(FilterType.Contains).NoDataTemplate("No se encontraron datos")
                    .BindTo((SelectList)ViewBag.CatTipoPersona)
                    //.Value("1")
                    .Enable(false)
                    .OptionLabel("-- Seleccione --")
                    .HtmlAttributes(new { style = "width:100%;", id = "tipoPersona" })
                    //.Enable(desactivar)
                    .Popup(p =>
                    {
                        p.AppendTo("#frmEditarPersona");
                    }))

                @Html.HiddenFor(m => m.idCatTipoPersona)
            </div>
        </div>
     </div>

     <div class="row px-4 mb-4 align-items-end my-2">
            <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Entidad:</label>
                @(Html.Kendo().DropDownListFor(m => m.PersonaDireccion.idEntidad)
                .Filter(FilterType.Contains).NoDataTemplate("No se encontraron datos")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Selecciona una opción")
                    .Events(e => e.Change("EntidadDropDownChange"))
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("Entidades_Drop", "Personas");
                        });
                    })
                    .HtmlAttributes(new { style = "width:100%;", id = "idEntidadED" })
                    .Popup(p =>
                    {
                        p.AppendTo("#frmEditarPersona");
                    })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Municipio:</label>
                @(Html.Kendo().DropDownListFor(m => m.PersonaDireccion.idMunicipio).Filter(FilterType.Contains).NoDataTemplate("No se encontraron datos")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Selecciona un Municipio")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("Municipios_Drop", "Personas")
                        .Data("filterMunicipios");
                        });
                    })
                    .HtmlAttributes(new { style = "width:100%;", id = "idMunicipioED" })
                    .Popup(p =>
                    {
                        p.AppendTo("#frmEditarPersona");
                    }))
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Código postal :</label>
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.codigoPostal)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Colonia <b>(obligatorio)</b>:</label>
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.colonia)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Calle <b>(obligatorio)</b>:</label>
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.calle)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Número <b>(obligatorio)</b>:</label>
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.numero)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
     </div>
        <div class="row px-4 mb-4 align-items-end my-2">
            <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Teléfono:</label>
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.telefono)
                    .HtmlAttributes(new
                    {
                            style = "width: 100%; height:58px;text-transform:uppercase;",
                        id = "telefono",
                        @maxlength = "20",
                        onkeypress = "return validarNumero(event)"
                   
                    })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Correo:</label>
                @(Html.Kendo().TextBoxFor(t => t.PersonaDireccion.correo)
                        .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
    </div>
    </div>
    <div class="row px-4 mb-4 align-items-end my-2">
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="nl">
            <div class="controlForm my-3">
                <label>No. de licencia:</label>
                @(Html.Kendo().TextBoxFor(t => t.numeroLicencia)
                    .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>

        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="tl">
            <div class="controlForm my-3">
                <label>Tipo licencia:</label>
                @(Html.Kendo().DropDownListFor(m => m.idTipoLicencia).Filter(FilterType.Contains).NoDataTemplate("No se encontraron datos")
                    .BindTo((SelectList)ViewBag.CatTipoLicencia)
                    .OptionLabel("-- Seleccione --")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .Popup(p =>
                    {
                        p.AppendTo("#frmEditarPersona");
                    }))
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="vg">
            <div class="controlForm my-3">
                <label>Vigencia:</label>
                @(Html.Kendo().DropDownListFor(m => m.idVigencia).Filter(FilterType.Contains).NoDataTemplate("No se encontraron datos")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Selecciona una opción")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("Tiempo_Vigencia_Drop", "Personas");
                        });
                    })
                    .HtmlAttributes(new { style = "width:100%;", id = "idVigencia" })
                    .Popup(p =>
                    {
                        p.AppendTo("#frmEditarPersona");
                    })
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2" id="fv">
            <div class="controlForm my-3">
                <label>Fecha de vigencia:</label>
                @(Html.Kendo().DatePickerFor(t => t.vigenciaLicencia)
                    .Culture("es-ES")
                    .HtmlAttributes(new { style = "width: 100%;" })
                    .Value(Model.vigenciaLicencia != DateTime.MinValue ? Model.vigenciaLicencia : (DateTime?)null)
                    .Events(e => e
                    .Change("onDatePickerChange")
                    )
                    )
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
            <div class="controlForm my-3">
                <label>Folio Detenido:</label>
                @(Html.Kendo().TextBoxFor(t => t.folioDetencion)
                    .HtmlAttributes(new { style = "width: 100%; height:58px;text-transform:uppercase;" })
                    )
            </div>
        </div>
    </div>
</form>
<div class="row my-4">
    <div class="col-12 col-md-6 mx-md-auto">
        <div class="row justify-content-around">
            <div class="col-auto btnOutline my-2 mx-auto mx-xl-2 p-0">
                <button type="button" class="btn btnOutline btn-sm btnClose" onclick="Cloce()">
                    <h6 class="m-0 px-3"><b>Cerrar</b></h6>
                </button>
            </div>
            <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                <div class="controlButton">
                    <button type="button" class="btnPrimary px-3" onclick="btnEditarPersona(event)">
                        <h5 class="m-0"><b>Guardar</b></h5>
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="modal fade" id="confirmacion" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirmación</h5>
                <button type="button" onclick="cerrarMsj()">X</button>
            </div>
            <div class="modal-body">
                ¿Está seguro de que desea cerrar la ventana y perder la información ingresada?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmarCerrar" onclick="AceptarCerrar()">Aceptar</button>
                <button type="button" class="btn btn-secondary" id="cancelarConfirmacion" onclick="cerrarMsj()">Cancelar</button>
            </div>
        </div>
    </div>
</div>
<script>
    function btnEditarPersona(event) {
        event.preventDefault()
        var isValid = true;
        var controlsValidate = [];
        //var validator = $("#frmEditarPersona").kendoValidator().data('kendoValidator');
        //var idTelefono = $("#telefono");
        //var idTelefonoValue = idTelefono.val();
        var idTipoPersona = $("#tipoPersona").val
        var idGenero = $("#id_genero_help").val();



        controlsValidate.push({ 'controlName': 'nombre' });
        // controlsValidate.push({ 'controlName': 'fechaNacimiento' });
        controlsValidate.push({ 'controlName': 'PersonaDireccion_colonia' });
        controlsValidate.push({ 'controlName': 'PersonaDireccion_calle' });
        controlsValidate.push({ 'controlName': 'PersonaDireccion_numero' });

        // INPUTS
        if (!isControlsValid(controlsValidate)) { isValid = false; }

        // DROP DOWN LIST
        controlsValidate = [];
        //controlsValidate.push({ 'controlName': 'idGenero' });
        controlsValidate.push({ 'controlName': 'idCatTipoPersona' });

        //console.log("genero es ", idGenero.length)

    if (!isControlsValidDropDown(controlsValidate) && tp != 2 && idGenero.length<1) 
        { 
            isValid = false; 
        }


        if (!isValid) {
            sitteg_warning('Hacen falta datos o existen datos incorrectos, favor de verificar.');
            return;
        }

        var formData = $("#frmEditarPersona").serialize();
        console.log(formData);

        let url = '@NavigationFlow.Accidentes' == '@currentNavigationFlow'
            ? '@Url.Action("ajax_EditarPersonaFromVehiculoSection","CapturaAccidentes")'
			: '@Url.Action("ajax_EditarPersona","Infracciones")';

        showLoading();
        $.ajax({
            url: url,
            type: 'POST',
            data: formData,
            success: function (result) {
                console.log("DFDF", result)
                //var grid = $("#gridConductores").data("kendoGrid");

                if (result && result.data) {
                  
                    if(window.DoUpdate){
                        window.DoUpdate(result.id,result)
                    }
                  
                    sitteg_success("Información actualizada correctamente")
                } else {
                    console.error("La respuesta no tiene la estructura esperada:", result);
                }


                 
                $('#modalBodyCrearPersona').html("");
                $('#modalCrearPersona').modal('hide');
                $('#modalBodyCrearPersona2').html("");
                $('#modalCrearPersona2').modal('hide');
                $('#modalBodyCrearPersona2').html("");
                $('#modalCrearPersona3').modal('hide');
                $('#modalBodyCrearPersona3').html('');
                $('.modal-backdrop').remove();
                sitteg_success('Elemento guardado correctamente')
                hideLoading();
            },
            error: function (xhr, status) {
                var errmsg = xhr.responseText;
                console.log(errmsg)
                sitteg_warning('Lo sentimos, ha ocurrido un error.');
                hideLoading();
            }
        });

    }
    $("#RFC").on("paste", (e) => {
        e.preventDefault();
    });


    $("#CURP").on("paste", (e) => {
        e.preventDefault();
    });
    $("#telefono").on("paste", (e) => {
        e.preventDefault();
    });

    function Cloce(){
                 $('#confirmacion').modal('show');       
    }
      
    function cerrarMsj(){
         $('#confirmacion').modal('hide');
    }
    function AceptarCerrar(){
        $('#confirmacion').modal('hide');
        $('#modalCrearPersona3').modal('hide'); 
        $('#modalCrearPersona2').modal('hide');
        $('#modalCrearPersona').modal('hide');
        $('#modalBodyCrearPersona3').html('');
        $('#modalBodyCrearPersona2').html('');
        
    }

</script>
