@using GuanajuatoAdminUsuarios.Models.Catalogos.Aseguradoras
@model AseguradoraIndexViewModel
@{
    @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
    var listaIdsPermitidosJson = @HttpContextAccessor.HttpContext.Session.GetString("IdsPermitidos").ToString();
    var autorizaciones = @HttpContextAccessor.HttpContext.Session.GetString("Autorizaciones").ToString();
}

<script>
    $(document).ready(function () {
        var access = @listaIdsPermitidosJson;
        if (access != undefined && access != '') {
            if (!access.toString().includes(localStorage.getItem("menuId"))) {
                Swal.fire({
                    icon: "error",
                    title: "¡EL usuario no tiene acceso a esta opción!"
                });
                setTimeout(() => {
                    window.location.href = "/Principal";
                }, 200);
            }
        } else {
            Swal.fire({
                icon: "error",
                title: "¡EL usuario no tiene acceso a esta opción!"
            });
            setTimeout(() => {
                window.location.href = "/Principal";
            }, 200);
        }
    });

</script>

<div class="mainContainer bg-light">
    
    <section class="mx-md-3 mx-lg-4 mx-xl-5 bg-white boxShadow my-5 rounded">
        
        <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
                
            <div class="col-12 col-md-6 col-lg-5 col-xl-auto">
                <div class="row align-items-center justify-content-center justify-content-md-start">
                    <div class="col-auto">
                        <i class="icon-aseguradoras h1 colorPrimary"></i>
                    </div>
                    <div class="col-auto my-3">
                        <h2 class="m-0 h3"><b>Catálogo de aseguradoras</b></h2>
                    </div>
                </div>
            </div>        
            <div class="col-12 col-md-6 col-lg-7 col-xl-auto">        
                <div class="row">
                    <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                        <button href="#" id="btnCrear" onclick="mostrarCrearModalAseuradora()">
                            <h6 class="m-0 d-flex align-items-center"><i class="icon-aseguradoras h5 mb-0 me-2"></i><b>Agregar aseguradora</b></h6>
                        </button>
                    </div>
                </div>        
            </div>                
        </div>

        <div class="row">        
            <div class="col-12">
                <div class="bg-light py-1"></div>
            </div>        
        </div>
                       
        <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
        
            <form id="filterForm">
                <div class="row">
                        <div class="controlForm my-3 col-12 col-md-6 col-lg-3">
                            <span>
                                @(Html.Kendo().TextBoxFor(t => t.Filter.NombreAseguradora)
                                    .Label(l => l.Content("Nombre aseguradora:"))
                                    .Placeholder("Ingrese nombre de aseguradora")
                                    .HtmlAttributes(new { style = "width: 100%", Id = "filterNombre" })
                                    )
                            </span>
                        </div>
                        <div class="controlForm my-3 col-12 col-md-6 col-lg-3">
                            <label>Estatus:</label>
                                @(Html.Kendo().DropDownListFor(t => t.Filter.Estatus)
                                    .DataTextField("Text") // Campo para el texto que se mostrará
                                    .DataValueField("Value") // Campo para el valor que se enviará
                                    .BindTo(new List<SelectListItem> {
                                new SelectListItem { Text = "Selecciona un estatus", Value = "-1" },
                                new SelectListItem { Text = "Activo", Value = "1" },
                                new SelectListItem { Text = "Inactivo", Value = "0" }
                                }) // Lista de elementos
                                    .Value("-1") // Valor predeterminado seleccionado
                                    .HtmlAttributes(new { style = "width: 100%" }) // Atributos HTML adicionales
                                    )
                        </div>
                </div>       
                

                <div class="row">                        
                    <div class="col-12 my-3 col-md-6 col-lg-3">
                        <div class="controlButton">
                            <button class="btnPrimary" type="button" onclick="submitSearchAseguradora()">  
                                <h5 class="m-0"><b>Buscar</b></h5>
                            </button>
                        </div>
                    </div>
                </div>
                    
                    
            </form>        
        </div>
        <div class="row">
            <div class="col-12 mb-4 px-4 rounded gridCustom">
                <div class="row justify-content-between mb-1 titleCustom">
                    <div class="col-12 col-md-auto mt-4 mb-2">
                        <h5 class="px-4"><b>Listado de aseguradoras</b></h5>
                        <h6 class="px-4 text-muted">Edita o elimina una aseguradora.</h6>
                    </div>
                </div>
                <div class="row">
                    <div id="tablaAseguradoras">                        
                        <partial name="_ListaAseguradoras" model="Model.Lista" />
                    </div>
                </div>
            </div>
        </div>
    </section>


    <!-- create modal -->
    <div class="modal fade modalCustom" id="crearAseguradoraModal" aria-labelledby="crearAseguradoraModalTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg boxShadow modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body" id="crearAseguradoraModalBody">
                </div>
            </div>
        </div>
    </div>    
    <!-- edit modal -->
    <div class="modal fade modalCustom" id="editarAseguradoraModal" aria-labelledby="editarAseguradoraModalTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg boxShadow modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body" id="editarAseguradoraModalBody">
                </div>
            </div>
        </div>
    </div>
    <!-- delete modal -->
    <div class="modal fade modalCustom" id="eliminarAseguradoraModal" aria-labelledby="eliminarAseguradoraModalTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg boxShadow modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body" id="eliminarAseguradoraModalBody">
                </div>
            </div>
        </div>
    </div>
</div>
 
<script>
    function mostrarCrearModalAseuradora() {
        showLoading();
        $.ajax({
            url: '@Url.Action("LoadCrearPartial", "CatAseguradoras")',
            type: 'GET',
            success: function (data) {
                $('#crearAseguradoraModalBody').html(data);
                $('#crearAseguradoraModal').modal('show');
            },
            error: function () {
                sitteg_warning("Ocurrio un error al procesar su solicitud.");
			},
            complete: function () {
				hideLoading();
			}
        });
	}

    function valid5char(e) {
                
        let value = e.target.value;
        console.log(value);
        
        let isValid = true;

        switch (value.length) {
            case 1:
                isValid = /^[0-2]$/.test(value);
                break;
            case 2:
                isValid = /^([01][0-9]|2[0-3])$/.test(value);
                break;
            case 3:
                isValid = /^([01][0-9]|2[0-3]):$/.test(value);
                break;
            case 4:
                isValid = /^([01][0-9]|2[0-3]):[0-5]$/.test(value);
                break;
            case 5:
                isValid = /^([01][0-9]|2[0-3]):[0-5][0-9]$/.test(value);
                break;
            default:
                isValid = false;
        }

        if (!isValid) {
            e.target.value = value.slice(0, -1); // Elimina el último carácter si no es válido
        }               
    }

    function validateTime(value) {
        let reg = /^[0-2][0-9]:[0-5][0-9]$/;
        return reg.test(value);
    }

    function handlePaste(e) {
        let clipboardData = e.clipboardData || window.clipboardData;
        let pastedData = clipboardData.getData('Text');
        if (!validateTime(pastedData)) {
            e.preventDefault();
        }
    }

    function handleBlur(e) {
        if (!validateTime(e.target.value)) {
            console.log('fail x blur');
            e.target.value = "";
        }
    }

    function submitSearchAseguradora() {
        let form = document.getElementById('filterForm');
        let formData = new FormData(form);

        currentFilter = {
            NombreAseguradora: formData.get('Filter.NombreAseguradora'),
            Estatus: formData.get('Filter.Estatus')
        };
        
        console.log(currentFilter);

        let grid = $("#AseguradorasGrid").data("kendoGrid");
        grid.dataSource.read();                
    }

    function applyFilter() {
        console.log("Current Filter:", currentFilter); // Verifica los datos en la consola
        return { filterParameters: currentFilter };
;
    }

    let timePickers = [document.getElementById('filterHoraInicio'), document.getElementById('filterHoraFin')];
    timePickers.forEach(function (timePicker) {
        if (timePicker) {
            timePicker.addEventListener('input', valid5char);
            timePicker.addEventListener('paste', handlePaste);
            timePicker.addEventListener('blur', handleBlur);
        }
    });

    let currentFilter = {};

</script>