@model List<ListadoAccidentesPorAccidenteModel>

<h6 class="px-4 text-muted">Listado de accidentes (un renglón por accidente)</h6>
<div class="col-12 mb-4 px-4 rounded gridCustom">
	<button type="button" class="btn btn-outline-success" onclick="generateExcel2()">
		<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filetype-xls" viewBox="0 0 16 16">
			<path fill-rule="evenodd" d="M14 4.5V14a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5L14 4.5ZM6.472 15.29a1.176 1.176 0 0 1-.111-.449h.765a.578.578 0 0 0 .254.384c.07.049.154.087.25.114.095.028.202.041.319.041.164 0 .302-.023.413-.07a.559.559 0 0 0 .255-.193.507.507 0 0 0 .085-.29.387.387 0 0 0-.153-.326c-.101-.08-.255-.144-.462-.193l-.619-.143a1.72 1.72 0 0 1-.539-.214 1.001 1.001 0 0 1-.351-.367 1.068 1.068 0 0 1-.123-.524c0-.244.063-.457.19-.639.127-.181.303-.322.527-.422.225-.1.484-.149.777-.149.305 0 .564.05.78.152.216.102.383.239.5.41.12.17.186.359.2.566h-.75a.56.56 0 0 0-.12-.258.625.625 0 0 0-.247-.181.923.923 0 0 0-.369-.068c-.217 0-.388.05-.513.152a.472.472 0 0 0-.184.384c0 .121.048.22.143.3a.97.97 0 0 0 .405.175l.62.143c.217.05.406.12.566.211a1 1 0 0 1 .375.358c.09.148.135.335.135.56 0 .247-.063.466-.188.656a1.216 1.216 0 0 1-.539.439c-.234.105-.52.158-.858.158-.254 0-.476-.03-.665-.09a1.404 1.404 0 0 1-.478-.252 1.13 1.13 0 0 1-.29-.375Zm-2.945-3.358h-.893L1.81 13.37h-.036l-.832-1.438h-.93l1.227 1.983L0 15.931h.861l.853-1.415h.035l.85 1.415h.908L2.253 13.94l1.274-2.007Zm2.727 3.325H4.557v-3.325h-.79v4h2.487v-.675Z"></path>
		</svg>
		Generar excel
	</button>
	@(Html.Kendo().Grid(Model)
		.Name("gridListadoAccidentesPorAccidente")
		.Columns(columns =>
		{
			columns.Bound(p => p.Numero).Title("No.").Width(90);
			columns.Bound(p => p.Numreporteaccidente).Title("Num. reporte accidente").Width(120);
			columns.Bound(p => p.Fecha).Title("Fecha").Width(100).Format("{0: dd/MM/yyyy }");
			columns.Bound(p => p.Hora).Title("Hora").Width(90);
			columns.Bound(p => p.Delegacion).Title("Delegación").Width(150);
			columns.Bound(p => p.municipio).Title("Municipio").Width(150);
			columns.Bound(p => p.carretera).Title("Carretera").Width(500);
			columns.Bound(p => p.tramo).Title("Tramo").Width(500);
			columns.Bound(p => p.kilometro).Title("Kilómetro").Width(90);
			columns.Bound(p => p.latitud).Title("Latitud").Width(90);
			columns.Bound(p => p.longitud).Title("Longitud").Width(90);
			columns.Bound(p => p.Vehiculo).Title("Vehiculo").Width(2000);
			columns.Bound(p => p.NombredelOficial).Title("Nombre del Oficial").Width(90);
			columns.Bound(p => p.Dañosalcamino).Title("Daños al camino").Width(90);
			columns.Bound(p => p.Dañosacarga).Title("Daños a la carga").Width(90);
			columns.Bound(p => p.Dañosapropietario).Title("Daños a propietario").Width(90);
			columns.Bound(p => p.Otrosdaños).Title("Otros daños").Width(90);
			columns.Bound(p => p.Lesionados).Title("Lesionados").Width(90);
			columns.Bound(p => p.Muertos).Title("Muertos").Width(90);
			columns.Bound(p => p.FactoresOpciones).Title("Factores/Opciones").Width(180);
			columns.Bound(p => p.Causas).Title("Causas").Width(180);
			columns.Bound(p => p.CausasDescripcion).Title("Descripción Causas").Width(1000);
		}).HtmlAttributes(new { style = "height:auto" })
		@*.Pageable(pager => pager.AlwaysVisible(true).Position(GridPagerPosition.Bottom).PageSizes(true))*@
		.Pageable(p => p.Enabled(true))
		//.Events(events => events.ExcelExport("ListadoAccidentes_excelExport"))
		.Sortable()
		.Scrollable(scr => scr.Enabled(true))
		.DataSource(dataSource => dataSource
		.Ajax()
		.Read(read => read.Action("ajax_BusquedaParaTablas", "EstadisticasAccidentes"))
		
		)
		.ToolBar(t => t.Custom().Text("Buscar...").Name("search"))
		.Events(events => events.ExcelExport("gridListadoAccidentesPorAccidente_ExportExcel"))
		.Events(events => events.DataBound("replaceLegend").DataBinding("replaceLegend"))

		)
</div>
<script>



  function generateExcel2() {

	console.log("Generate Excel 2")
        showLoading();

         document.getElementById("dataReport").value="PorAccidente"
        var form = document.getElementById("frmBusquedaEstadisticasIncidencias")
        form.submit()

        setTimeout(function () {
            sitteg_success('Archivo descargado correctamente');
            hideLoading();
        }, 5000);
  }


</script>

<script>
	var promises = [
		$.Deferred()
	];
	function gridListadoAccidentesPorAccidente_ExportExcel(e) {
		e.preventDefault();
		promises[0].resolve(e.workbook);
	}

	/*function generateExcel2() {
		var grid = $("#gridListadoAccidentesPorAccidente").data("kendoGrid");
		var pageSize = grid.dataSource._data.length;
		var dataSourceTotal = grid.dataSource.total();
		grid.dataSource.pageSize(dataSourceTotal);
		var exportPromises = [
			grid.saveAsExcel()
		];

		$.when.apply($, exportPromises)
			.then(function () {
				promises[0].resolve(grid.options.excel.workbook);

				$.when.apply($, promises)
					.then(function (infraccionesInfo) {
						var sheets = [
							infraccionesInfo.sheets[0],
						];

						sheets[0].title = "Listado Accidentes";

						var workbook = new kendo.ooxml.Workbook({
							sheets: sheets
						});

						kendo.saveAs({
							dataURI: workbook.toDataURL(),
							fileName: "ReportedeAccidentePorAccidentes.xlsx"
						});
					});


				setTimeout(function () {
					sitteg_success('Archivo descargado correctamente');
				}, 1500);
			});


	}*/
</script>