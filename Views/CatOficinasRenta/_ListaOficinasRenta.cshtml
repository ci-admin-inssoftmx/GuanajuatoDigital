<script>
    function returnData() {
        var idMun = $("#IdDelegacion2").val();
        //var idDependencia = $("#idDependenciaFiltro").val();
        //idDependencia = idDependencia ? idDependencia : null;

        return { idDelegacion: idMun}
    }
</script>
 @if (ViewBag.Admin == true)
{
    <div class="col-12 col-md-6 col-lg-7 col-xl-auto">
        <div class="row">
            <div class="col-auto btnOutline btnOutlinePrimary my-2 mx-auto mx-xl-2 p-0">
                <button onclick="mostrarModalOfiRenta()">
                    <h6 class="m-0 d-flex align-items-center"><i class="icon-addOficina h5 mb-0 me-2"></i><b> Agregar nueva oficina en renta.</b></h6>
                </button>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="row justify-content-between mb-1 titleCustom">
        <div class="col-12 col-md-auto mt-4 mb-2">
            <p><h5 class="px-4"><b>Listado de oficinas en renta</b></h5></p>
            <p><h6 class="px-4 text-muted">Edita o inactiva las oficinas rentas.</h6></p>
        </div>
    </div>
    <div class="col-12 mb-4 px-4 rounded gridCustom">

        @(
            Html.Kendo().Grid<GuanajuatoAdminUsuarios.Models.CatOficinasRentaModel>()
                        .Name("gridCatOficinasRenta")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.IdDelegacion).Hidden();
                            columns.Bound(c => c.IdOficinaRenta).Title("Id").Width(30);
                            columns.Bound(c => c.NombreOficina).Title("Oficina").Width(100);
                            columns.Bound(c => c.DelegacionDesc).Title("Delegación").Width(90);
                            columns.Bound(c => c.estatusDesc).Title("Estatus en sistema").Width(90);
                            columns.Command(c => c.Custom("Editar").Click("getIdOficinaRenta")).Width(50);
                            // columns.Command(c => c.Custom("Eliminar").Click("eliminar")).Width(50);


                        }).HtmlAttributes(new { style = "height:550px" })
                        .Sortable()
                        //.Groupable()
                        .Scrollable()
                        .Pageable()
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .Read(read => read.Action("GetOfiRent", "CatOficinasRenta").Data("returnData"))
        .PageSize(5).Model(model => model.Id(p => p.IdOficinaRenta))
            )
            .ToolBar(t => t.Search().Text("Buscar..."))
            .Search(s =>
            {
                s.Field(c => c.NombreOficina);
                s.Field(c => c.DelegacionDesc);

            })

            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row)
            )

            .Events(events => events.DataBound("replaceLegend").DataBinding("replaceLegend"))


            )

        @(Html.Kendo().Tooltip()
            .For("#grid")
            .Filter("th")
            .Position(TooltipPosition.Top)
            .ContentHandler("tooltipContent")
            )


    </div>
</div>
<div class="modal fade modalCustom" id="agregarOficinasRenta" aria-labelledby="agregarOficinasRentaLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg boxShadow modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body" id="ModalBodyaAgregarOficinasRenta">
            </div>
        </div>
    </div>
</div>
<script>
    function getIdOficinaRenta(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var IdOficinaRenta = dataItem.IdOficinaRenta;
        var IdDelegacion = dataItem.IdDelegacion;

        console.log(IdDelegacion);
        showLoading();
        $.ajax({
            url: '@Url.Action("EditarOficinaRentaModal", "CatOficinasRenta")',
            type: 'POST', 
            data: { IdOficinaRenta: IdOficinaRenta, IdDelegacion: IdDelegacion },
            success: function (result) {
                $('#ModalBodyaAgregarOficinasRenta').html(result);
                $('#agregarOficinasRenta').modal('show');
                hideLoading();
            }, error: function () {
                sitteg_warning("Ocurrio un error al procesar su solicitud.");
                hideLoading();
            }
        })
    }

    function eliminar(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var IdOficinaRenta = dataItem.IdOficinaRenta;
        var IdDelegacion = dataItem.IdDelegacion;

        console.log(IdOficinaRenta);
        showLoading();
        $.ajax({
            url: '@Url.Action("EliminarOficinaRentaModal", "CatOficinasRenta")', 
            type: 'POST',
            data: { IdOficinaRenta: IdOficinaRenta, IdDelegacion : IdDelegacion },
            success: function (result) {
                $('#ModalBodyaAgregarOficinasRenta').html(result);
                $('#agregarOficinasRenta').modal('show');
                hideLoading();
            }, error: function () {
                sitteg_warning("Ocurrio un error al procesar su solicitud.");
                hideLoading();
            }
        })
    }
    function tooltipContent(e) {
        var titulo = e.target.context.dataset.title;
        return titulo;
    }
</script>