
<script>
    function onRowSelect(e) {
        var selectedRow = this.select();
        var IdVehiculo, IdPersona, Placa, Serie;

        if (selectedRow.length > 0) {
            var dataItem = this.dataItem(selectedRow);
            IdVehiculo = dataItem.IdVehiculo;
            IdPersona = dataItem.IdPersona;
            Placa = dataItem.Placa;
            Serie = dataItem.Serie;

            showLoading();
            $.ajax({
                url: '@Url.Action("ActualizarAccidenteConVehiculo", "CapturaAccidentes")',
                type: 'POST',
                data: { IdVehiculo: IdVehiculo, IdPersona: IdPersona, Placa: Placa, Serie: Serie },
                success: function (result) {
                    hideLoading();
                    if (result.error) {
                        $('#agregarVehiculoModal').modal('hide');
                        sitteg_warning("El vehículo ya fue registrado en este accidente")
                    } else {
                        console.log("FER", result);
                        abrirModalConductor(IdPersona, result.IdVehiculoH);
                    }
                },
                error: function (error) {
                    hideLoading();
                    alert("ERROR al procesar la solicitud.");
                }
            });
        }
    }

    function abrirModalConductor(IdPersona, IdVehiculo) {
        showLoading();
        $.ajax({
            url: '@Url.Action("MostrarModalConductor", "CapturaAccidentes")',
            type: 'POST',
            data: { IdPersona: IdPersona, IdVehiculo: IdVehiculo },
            success: function (data) {
                console.log("este modal?");
                $('#ModalBodyVehiculoService').html("");
                // $('#agregarVehiculoModal').modal('hide');
                $('.modal-backdrop').remove();
                $('#modalAgregarConductor').modal({ backdrop: 'false', keyboard: false });
                $('#modalAgregarConductor').modal('show');
                $('#ModalBodyAgregarConductor').html(data);
                hideLoading();
            },
            error: function (error) {
                console.log("ERROR", error);
                hideLoading();
            }
        });
    }


</script>
<script>

    function quitData() {
        var grid = $("#gridPrevioVehiculo").data("kendoGrid");

        grid.bind("dataBound", function () {
            setTimeout(() => {
                var t = document.querySelector("span.k-pager-info.k-label");
                var i = document.querySelector(".k-pager-sizes.k-label");

                if (t.innerHTML == "No items to display") {
                    t.innerHTML = "";
                }

                if (i && i.innerHTML.includes("items per page")) {
                    i.innerHTML = "";
                }

                var text = t.textContent;

                text = text.replace(/of/g, "de").replace(/items/g, "elementos");

                t.textContent = text;
            }, 500);
        });
    }

    function onDataBound() {
        var grid = $("#gridPrevioVehiculo").data("kendoGrid");

        if (grid.dataSource.total() === 1) {
            setTimeout(function () {
                var row = grid.tbody.find("tr:first");
                grid.select(row);
                row.find(".k-checkbox").trigger("click");
            }, 50);
        }
    }

</script>
<div class="row">
    <div class="col-12 mb-4 px-4 rounded gridCustom">

        @(
            Html.Kendo().Grid<GuanajuatoAdminUsuarios.Models.CapturaAccidentesModel>()
            .Name("gridPrevioVehiculo")
            .Events(events => events.Change("onRowSelect"))//.DataBinding("quitData").DataBound("quitData"))
            .Columns(columns =>
            {

                columns.Bound(c => c.IdPersona).Hidden();
                columns.Bound(c => c.IdVehiculo).Hidden();
                columns.Select().Width(50).ClientHeaderTemplate(" ");
                columns.Bound(c => c.Marca).Title("Marca").Width(100);
                columns.Bound(c => c.Submarca).Title("Submarca").Width(100);
                columns.Bound(c => c.Modelo).Title("Modelo").Width(100);
                columns.Bound(c => c.Placa).Title("Placa").Width(100);
                columns.Bound(c => c.Serie).Title("Serie").Width(100);
                //columns.Bound(c => c.Tarjeta).Title("Tarjeta").Width(100);
                // columns.Bound(c => c.TipoServicio).Title("Tipo de Servicio").Width(100);
                columns.Bound(c => c.TipoVehiculo).Title("Tipo de Vehículo").Width(100);
                columns.Bound(c => c.Propietario).Title("Propietario").Width(100);
                columns.Bound(c => c.Color).Title("Color").Width(100);
                columns.Bound(c => c.EntidadRegistro).Title("Entidad").Width(100);
                columns.Bound(c => c.CURPyRFC).Title("CURP/RFC").Width(100);
                //            columns.Template("<button onclick='agregarVehiculo()'><h6 class='m-0 colorPrimary'><i class='h5 icon-edit me-2'></i><b>Seleccionar</b></h6></button>").Width(50);
                //columns.Command(c => c.Custom("Editar").Click("getId")).Width(50);


            })
            .HtmlAttributes(new { style = "height:400px" })
            @*.Sortable()*@
            .Scrollable()
            .Pageable()

@*            .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("BuscarVehiculo", "CapturaAccidentes"))
            .PageSize(10)
            )
*@

            .NoRecords(noRecords => noRecords.Template("Realice una búsqueda o revise los datos ingresados"))
            .ToolBar(t => t.Search().Text("Buscar..."))
            .Search(s =>
            {
                s.Field(c => c.Marca);
                s.Field(c => c.Submarca);
                s.Field(c => c.Placa);
                s.Field(c => c.Serie);
                s.Field(c => c.Tarjeta);
                s.Field(c => c.TipoServicio);
                s.Field(c => c.TipoVehiculo);
                s.Field(c => c.Propietario);
                s.Field(c => c.EntidadRegistro);
                s.Field(c => c.Color);
            })
            .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Row))
            .Events(x => x.DataBound("replaceLegend"))
            .Events(events => events.DataBound("onDataBound"))
            )
    </div>
</div>

