@model GuanajuatoAdminUsuarios.Models.CapturaAccidentesModel
@{
    var EsEdicion = ViewBag.EsEdicion;

    var Hospitales = EsEdicion == "1" ? "Drop_HospitalesActivos" : "Drop_HospitalesActivos";

}
<section id="sectionInv" class="bg-white boxShadow rounded pb-1">
    <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
        <div class="col-12 col-md-auto">
            <div class="row align-items-center justify-content-center justify-content-md-start">
                <div class="col-auto">
                    <div class="border border-2 border-dark rounded-circle">
                        <h5 class="m-0 numberCard d-flex align-items-center justify-content-center">
                            <b>3</b>
                        </h5>
                    </div>
                </div>
                <div class="col-auto p-0">
                    <i class="icon-involucrado h1 colorPrimary"></i>
                </div>
                <div class="col-auto my-3">
                    <h2 class="m-0 h3"><b>Involucrados</b></h2>
                </div>
            </div>
        </div>
        <div class="col-auto">
            <div class="row">
                <div class="col-auto my-3">
                    <button class="btn-close" type="button" onclick="cerrarInv()"></button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-11 pe-0">
            <div class="bgSuccess py-1"></div>
        </div>
        <div class="col-1 ps-0">
            <div class="bg-light py-1"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 my-4">
            <h5 class="px-4"><b>Datos de los involucrados</b></h5>
            <h6 class="px-4 text-muted">
                Selecciona entre vehículos / se ignora
            </h6>
        </div>
    </div>

    <div class="row justify-content-center">

        <div class="col-12 col-md-6 col-lg-4 col-xl-auto text-center">
            <div class="btnOutline btnOutlinePrimary px-4 my-3">
                <button onclick="busquedaPersona()">
                    <h5 class="m-0"><i class="me-2 icon-addInvolucrado"></i><b>Buscar involucrado</b></h5>
                </button>
            </div>
        </div>
        <div id="sinBuqueda" class="col-12 mt-4 controlForm" style="display:block">
            <label class="text-center">Realiza la búsqueda para relacionar un involucrado con un vehículo</label>
        </div>
    </div>

    
    <div id="involucradoSeleccionado" style="display:none">
        <div class="row px-4 align-items-end">
            <div class="col-12 mt-4 controlForm">
                <label>Involucrado del accidente:</label>
            </div>
            <div class="col-12 mb-4">
                <h5 class="m-0 colorPrimary"><i class="icon-fisica h4"></i> <b><span id="nombreModal"></span></b></h5>
            </div>
            <div class="col-12 mb-4">
                <label>CURP:</label>
                <h5 class="m-0 colorPrimary"> <b><span id="curpModal"></span></b></h5>
            </div>
            <div class="col-12 mb-4">
                <label>RFC:</label>
                <h5 class="m-0 colorPrimary"> <b><span id="rfcModal"></span></b></h5>
            </div>
            <div class="col-12 mb-4">
                <label>Fecha de Nacimiento:</label>
                <h5 class="m-0 colorPrimary"> <b><span id="fechaNacimientoModal"></span></b></h5>
            </div>
            <div class="col-12 mb-4">
                <h5 class="m-0 colorPrimary"> <b><span id="idInvolucrado"></span></b></h5>
            </div>
        </div>
    </div>

        <div class="row px-4 align-items-end">
            <div class="col-12 mt-4 controlForm">
                <label>Vehículo donde iba el involucrado durante el accidente:</label>
            </div>
        </div>

        <nav class="tabCustom">
            <div class="nav nav-tabs row mx-0" id="nav-tab" role="tablist">
                <button class="nav-link col active" id="vehiculo-involucrado-tab" data-bs-toggle="tab"
                        data-bs-target="#vehiculo-involucrado" type="button" role="tab" aria-controls="vehiculo-involucrado"
                        aria-selected="true">
                    <div class="row justify-content-center align-items-center px-3 py-2">
                        <div class="col-auto radioCustom p-0">
                            <div class="rounded-circle m-2"></div>
                        </div>
                        <div class="col-auto p-0">
                            <h5 class="m-0"><i class="icon-car h4"></i> <b>Vehículos</b></h5>
                        </div>
                    </div>
                </button>
                <button class="nav-link col" id="noneVehiculo-involucrado-tab" data-bs-toggle="tab"
                        data-bs-target="#noneVehiculo-involucrado" type="button" role="tab"
                        aria-controls="noneVehiculo-involucrado" aria-selected="false">
                    <div class="row justify-content-center align-items-center px-3 py-2">
                        <div class="col-auto radioCustom p-0">
                            <div class="rounded-circle m-2"></div>
                        </div>
                        <div class="col-auto p-0">
                            <h5 class="m-0"><i class="icon-sinPropietario h4"></i> <b>Se ignora</b></h5>
                        </div>
                    </div>
                </button>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane tabCustomConteiner fade show active" id="vehiculo-involucrado" role="tabpanel"
                 aria-labelledby="vehiculo-involucrado-tab">
                <div class="px-4 mt-4 pb-4 align-items-end">
                    <div class="row titleCustom mb-1">
                        <div class="col-12 mt-4 mb-4">
                            <h5 class="px-4"><b>Listado de vehículos involucrados</b></h5>
                            <h6 class="px-4 text-muted">Selecciona un vehículo involucrado para continuar.</h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 rounded mb-4">

                            <partial name="_ListaInvolucrados" model="Model" />

                            <!--tABLA-->
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="tabCustomEnd"></div>
                    </div>
                </div>

            </div>
            <div class="tab-pane tabCustomConteiner fade" id="noneVehiculo-involucrado" role="tabpanel"
                 aria-labelledby="noneVehiculo-involucrado-tab">
                <div class="row px-4 my-4 py-5 align-items-end">
                    <div class="col-12 col-md-10 mx-md-auto text-center">
                        <h3><b>Se utiliza para capturar un accidente</b></h3>
                        <h4 class="fw-normal">
                            en el que se desconoce el vehículo donde iba el involucrado o no iba en un
                            vehiculo
                        </h4>
                        <h6 class="fw-normal">Si este es el caso debes dar click en el botón</h6>


                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="tabCustomEnd"></div>
                    </div>
                </div>
            </div>
        </div>

        <form id="complementoInvolucradoForm">
            <div class="row align-items-end px-4 mt-4">
                <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                    <div class="controlForm my-3">
                        <label>Tipo <b>(obligatorio)</b>:</label>
                        <span>
                            <input type="hidden" id="idPersonaInput" name="idPersona" />
                            @Html.HiddenFor(model => model.IdVehiculo, new { id = "idVehiculoHidden" })
                            @(Html.Kendo().DropDownListFor(t => t.IdTipoInvolucrado).NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel("Selecciona un tipo")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("Tipos_Drop", "CapturaAccidentes");
                                        });
                                    })
                                    .HtmlAttributes(new { style = "width:100%;", id = "IdTipoInvolucrado" })
                                    )
                        </span>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                    <div class="controlForm my-3">
                        <label>Estado de la víctima <b>(obligatorio)</b>:</label>
                        <span>
                            @(Html.Kendo().DropDownListFor(t => t.IdEstadoVictima).NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel("Selecciona una opción")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("EstadoVictima_Drop", "CapturaAccidentes");
                                        });
                                    })
                                    .HtmlAttributes(new { style = "width:100%;", id = "IdEstadoVictima" })
                                    )
                        </span>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                    <div class="controlForm my-3">
                        <label>Llevado a:</label>
                        <span>
                            @(Html.Kendo().DropDownListFor(t => t.IdHospital).NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel("Selecciona una opción")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action(Hospitales, "Catalogos");
                                        });
                                    })
                                    .HtmlAttributes(new { style = "width:100%;" })
                                    )

                            </span>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                        <div class="controlForm my-3">
                            <label>Traslado por:</label>
                            <span>
                                @(Html.Kendo().DropDownListFor(t => t.IdInstitucionTraslado).NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel("Selecciona una opción")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("InstTraslado_Drop", "CapturaAccidentes");
                                        });
                                    })
                                    .HtmlAttributes(new { style = "width:100%;" })
                                    )
                            </span>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                        <div class="controlForm my-3">
                            <label>Asiento que ocupaba:</label>
                            <span>
                                @(Html.Kendo().TextBoxFor(t => t.IdAsiento)
                                    .HtmlAttributes(new { style = "width: 100%", Id = "IdAsiento", type = "number", min = "1" })

                                    //.Spinners(true)
                                    )
                        </span>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                    <div class="controlForm my-3" id="cinturon2" style="display:block">
                        <label for="IdCinturon" id="labelIdCinturon">Traía cinturón <b>(obligatorio)</b>:</label>
                        <span>
                            @(Html.Kendo().DropDownListFor(t => t.IdCinturon).NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .Filter(FilterType.Contains)
                                    .OptionLabel("Selecciona una opción")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("Cinturon_Drop", "CapturaAccidentes");
                                        });
                                    })
                                    .HtmlAttributes(new { style = "width:100%;", id = "IdCinturon" })
                                    )
                            </span>
                        </div>          
                    </div>

                    <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                        <div class="controlForm my-3">
                            <label>Aseguradora:</label>
                            <span>
                                @(Html.Kendo().DropDownListFor(t => t.IdAseguradora).NoDataTemplate("No se encontraron datos")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .OptionLabel("Selecciona una opción")
                                    .Filter(FilterType.Contains)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                    read.Action("Aseguradora_Drop", "CapturaAccidentes");
                                        });
                                    })
                                    .HtmlAttributes(new { style = "width:100%;" })
                                    )
                            </span>
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                        <div class="controlForm my-3">
                            <label>Nro. Póliza:</label>
                            <span>
                            @(Html.Kendo().TextBoxFor(t => t.Poliza)
                                .Placeholder("Ingresa Nro. Póliza")
                                .HtmlAttributes(new { style = "width: 100%" })
                                )
                            </span>
                        </div>
                    </div>

                    <div class="col-12 col-md-6 col-lg-4 col-xl-3 col-xx-2">
                        <div class="controlForm my-3">
                            <label>Fecha Expiración Póliza:</label>
                            @(Html.Kendo().DatePickerFor(t => t.FechaExpiracionPoliza)
                                .Format("dd/MM/yyyy")
                                .HtmlAttributes(new { style = "width: 100%", id = "FechaExpiracionPoliza" })
                                .Min(DateTime.Today)
                                )
                        </div>
                    </div>
                    <div class="w-100"></div>

                    <div class="col-12 col-md-12 col-lg-4">
                        <div class="controlForm my-3">
                            <label>Agregar archivo:</label>
                                 <div class="input-group">
                                     <input type="file" name="archivoInvolucrado" id="archivoInvolucrado" class="form-control">
                                </div>            
                         </div>
                    </div>
                </div>
            </form>
   
             <div class="row">
                    <div class="col-12">
                        <div class="tabCustomEnd">
                            <div class="row">
                                <div class="col-12 col-md-8 mx-md-auto col-lg-5 d-flex justify-content-between align-items-center">
                                    <div class="col-auto btnOutline my-2 p-0">
                                        <button type="button" class="btn btnOutline btn-sm btnClose" onclick="cerrarInv()" class="btn btn-secondary">
                                            <h6 class="m-0 px-3"><b>Cerrar</b></h6>
                                        </button>
                                    </div>
                                    <div class="col-auto controlButton my-3 p-0">
                                        <button type="button" onclick="agregarComplementos()" class="btn btn-primary">
                                            <h5 class="m-0"><b>Finalizar captura</b></h5>
                                        </button>  
                                    </div>
                                </div>
                            </div>
                            </div>
        </div>
            </div>
       
  

</section>
<!--MODAL BUSQUEDA INVOLUCRADO-->
<div class="modal fade modalCustom" id="buscarInvolucradoModal" aria-labelledby="buscarInvolucradLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-body" id="ModalBodyBuscarInvolucrado">
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //Funcion que se ejecuta cuando una persona es seleccionada
        $('#idPersonaInput').on('onPersonaSeleccionadaTrigger', function (event, data) {
            if (data.idPersona === '' || data.idPersona == 0 || data.idPersona === undefined)
                $('#involucradoSeleccionado').hide();
            else {
                var idPersona = data.idPersona;
                var nombre = data.nombre
                var apellidoPaterno = data.apellidoPaterno
                var apellidoMaterno = data.apellidoMaterno
                var curp = data.CURP==null?'':data.CURP;
                var rfc = data.RFC==null?'':data.RFC;
                var fechaNacimiento = data.fechaNacimiento.includes('0001-01-01')?'':data.fechaNacimiento;
                console.log("ID",idPersona)
                if(fechaNacimiento.length>0){
                    fechaNacimiento = kendo.toString(new Date(fechaNacimiento), "dd/MM/yyyy");
                }

                var nombreCompleto = nombre + " " + apellidoPaterno + " " + apellidoMaterno;
                $('#gridVehiculosInvolucrados').data('idPersona', idPersona);

                //Se asignan valores de persona seleccionada
                $('#idPersonaInput').val(idPersona);
                $('#nombreModal').text(nombreCompleto.trim().toUpperCase());
                $('#curpModal').text(curp.toUpperCase());
                $('#fechaNacimientoModal').text(fechaNacimiento);
                $('#rfcModal').text(rfc.toUpperCase());

                $('#buscarInvolucradoModal').modal('hide');
                $('body').removeClass('model-open');
                $('.modal-backdrop').remove();
                $('#sinBuqueda').hide();
                $('#involucradoSeleccionado').fadeIn();
            }

        });
    });
    function busquedaPersona() {
        showLoading();
        $.ajax({
            url: '@Url.Action("SubmodalBuscarInvolucrado", "CapturaAccidentes")',
            type: 'GET',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            async: false,
            success: function (data) {
                $('#ModalBodyBuscarInvolucrado').html(data);
                $('#buscarInvolucradoModal').modal({ backdrop: 'static', keyboard: false });
                $('#buscarInvolucradoModal').modal('show');
                hideLoading();
            }, error: function () {
                sitteg_warning("Ocurrio un error al procesar su solicitud.");
                hideLoading();
            }
        });
    }

    function agregarComplementos() {
        console.log("IS")
        var archivoInput = document.getElementById('archivoInvolucrado');
        var archivo = archivoInput.files[0];

       if (archivo) {
        if (archivo.size > 6 * 1024 * 1024) { // 6 MB en bytes
            sitteg_warning('El archivo del parte excede el tamaño máximo permitido.');
            return;
        }
    }

        var idPersona = $("#idPersonaInput").val();
        if (idPersona === "") {
            sitteg_warning("Debe seleccionar una persona involucrada");
            return;
        }

        var validator = $("#complementoInvolucradoForm").kendoValidator().data('kendoValidator');
        var controlsValidate = [];
        var isValid = true;

        var IdTipoInvolucrado = $("#IdTipoInvolucrado").val();
        var IdEstadoVictima = $("#IdEstadoVictima").val();
        var IdCinturon = $("#IdCinturon").val();

        controlsValidate.push({ 'controlName': 'IdTipoInvolucrado' });
        controlsValidate.push({ 'controlName': 'IdEstadoVictima' });
        controlsValidate.push({ 'controlName': 'IdCinturon' });

        // INPUTS
        if (!isControlsValidDropDown(controlsValidate)) { isValid = false; }

        if (!isValid) {
            sitteg_warning('Hacen falta datos o existen datos incorrectos, favor de verificar.');
            return;
        }

        // Crear un objeto FormData
        var formData = new FormData(document.getElementById('complementoInvolucradoForm'));

        // Añadir archivo al FormData
        if (archivo) {
            formData.append('archivoInvolucrado', archivo);
        }

        showLoading();
        $.ajax({
            url: '@Url.Action("ActualizarInfoInvolucrado", "CapturaAccidentes")',
            type: 'POST',
            data: formData,
            processData: false,  
            contentType: false, 
            success: function (result) {
                console.log("RES", result);
                if (result === 3) {
                    sitteg_warning("Persona ya registrada en el accidente");
                    $('#agregarInvolucradoModal').modal('hide');
                } else {
                    $('#agregarInvolucradoModal').modal('hide');
                    $('.modal-backdrop').remove();
                    sitteg_success("Se ha actualizado la información");
                    actualizarGrid();
                }
                hideLoading();
            },
            error: function (error) {
                hideLoading();
            }
        });
    }

    function cerrarInv(){
   $('#agregarInvolucradoModal').modal('hide');
     $('body').removeClass('model-open');
                $('.modal-backdrop').remove();

    }


    function actualizarGrid() {
        var grid = $("#gridInvolucradosTodo").data("kendoGrid");
        grid.dataSource.read();
        grid.refresh();
    }
    function involucardoNoVehiculo() {
        var idPersona = $("#idPersonaInput").val();
        var IdVehiculoInvolucrado = $("#idVehiculoHidden").val();
        showLoading();
        $.ajax({
            url: '@Url.Action("GuardarRelacionPersonaVehiculo", "CapturaAccidentes")',
            type: 'POST',
            data: { idPersona: idPersona, IdVehiculoInvolucrado: IdVehiculoInvolucrado },
            success: function (response) {
                sitteg_success("Se ha actualizado la información");
                // Resto del código
                hideLoading();
            },
            error: function (xhr, status, error) {
                // Manejo del error
                hideLoading();
            }
        });
    }
    $(document).ready(function () {
        $("#IdAsiento").on("keydown", function (e) {
            // Obtener el código de la tecla presionada
            var keyCode = e.keyCode || e.which;

            // Verificar si la tecla presionada es el cero
            if (keyCode === 48 || keyCode === 96) {
                // Si se presionó el cero, prevenir su inserción
                e.preventDefault();
            }
        });
    });

    document.getElementById('archivoInvolucrado').addEventListener('change', function (event) {
        var file = event.target.files[0];
        if (file) {
            var reader = new FileReader();

            reader.onload = function (e) {
                var iframe = document.getElementById('archivoInvIframe');
                iframe.src = e.target.result;
            };

            reader.readAsDataURL(file);
        }
    });

     function guardarArchivoInv() {
        var archivoInput = document.getElementById('archivoInvolucrado');
        var archivo = archivoInput.files[0];

        if (!archivo) {
            sitteg_warning('Por favor, selecciona un archivo primero.');
            return;
        }
          if (archivo && archivo.size > 6 * 1024 * 1024) { // 6 MB en bytes
            sitteg_warning('El archivo del parte excede el tamaño máximo permitido.');
            return; 
        }
        var formData = new FormData();
        formData.append('archivoInvolucrado', archivo);

        $.ajax({
            url: '/CapturaAccidentes/GuardarArchivoInvolucrado', 
            type: 'POST',
            data: formData,
            contentType: false, 
            processData: false,
            success: function(response) {
                if (response.success) {
                    sitteg_success('Archivo guardado correctamente.');
                } else {
                    sitteg_warning('Error: ' + response.message);
                }
            },
            error: function(xhr, status, error) {
                sitteg_warning('Hubo un error al guardar el archivo.');
                console.error('Error:', error);
            }
        });
    }

   function cerrarIframeInv(){
        $('#archivoInvModal').modal('hide');

    }
</script>