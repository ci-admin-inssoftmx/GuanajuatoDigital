version: '3.8'

services:
  # Aplicación GuanajuatoDigital
  guanajuato-digital-dev:
    build:
      context: ..
      dockerfile: .docker/Dockerfile.windows
    container_name: guanajuato-digital-dev
    ports:
      - "${ENV_DEV_PORT:-9080}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${DEV_CONNECTION_STRING:-Server=localhost;Database=GuanajuatoDigital_DEV;Trusted_Connection=true;}
    volumes:
      - guanajuato-logs-dev:/app/logs
      - guanajuato-data-dev:/app/data
    networks:
      - guanajuato-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "powershell", "-command", "try { $response = Invoke-WebRequest http://localhost:80/health -UseBasicParsing; if ($response.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  guanajuato-digital-pre:
    build:
      context: ..
      dockerfile: .docker/Dockerfile.windows
    container_name: guanajuato-digital-pre
    ports:
      - "${ENV_PRE_PORT:-9090}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${PRE_CONNECTION_STRING:-Server=localhost;Database=GuanajuatoDigital_PRE;Trusted_Connection=true;}
    volumes:
      - guanajuato-logs-pre:/app/logs
      - guanajuato-data-pre:/app/data
    networks:
      - guanajuato-network
    restart: unless-stopped
    profiles:
      - pre
    healthcheck:
      test: ["CMD", "powershell", "-command", "try { $response = Invoke-WebRequest http://localhost:80/health -UseBasicParsing; if ($response.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  guanajuato-digital-pro:
    build:
      context: ..
      dockerfile: .docker/Dockerfile.windows
    container_name: guanajuato-digital-pro
    ports:
      - "${ENV_PRO_PORT:-9100}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${PRO_CONNECTION_STRING:-Server=localhost;Database=GuanajuatoDigital_PRO;Trusted_Connection=true;}
    volumes:
      - guanajuato-logs-pro:/app/logs
      - guanajuato-data-pro:/app/data
    networks:
      - guanajuato-network
    restart: unless-stopped
    profiles:
      - pro
    healthcheck:
      test: ["CMD", "powershell", "-command", "try { $response = Invoke-WebRequest http://localhost:80/health -UseBasicParsing; if ($response.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de datos SQL Server (opcional - para desarrollo local)
  sqlserver-dev:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: guanajuato-sqlserver-dev
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_SA_PASSWORD:-GuanajuatoDigital2025!}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - guanajuato-network
    restart: unless-stopped
    profiles:
      - database

  # SonarQube para análisis de código
  sonarqube:
    image: sonarqube:community
    container_name: guanajuato-sonarqube
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=${SONAR_DB_PASSWORD:-sonar123}
    ports:
      - "${SONARQUBE_PORT:-9000}:9000"
    volumes:
      - sonarqube-conf:/opt/sonarqube/conf
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-logs:/opt/sonarqube/logs
      - sonarqube-extensions:/opt/sonarqube/extensions
    networks:
      - guanajuato-network
    depends_on:
      - sonarqube-db
    restart: unless-stopped
    profiles:
      - tools

  # Base de datos para SonarQube
  sonarqube-db:
    image: postgres:13
    container_name: guanajuato-sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=${SONAR_DB_PASSWORD:-sonar123}
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube-db-data:/var/lib/postgresql/data
    networks:
      - guanajuato-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  # Volúmenes para la aplicación
  guanajuato-logs-dev:
    driver: local
  guanajuato-data-dev:
    driver: local
  guanajuato-logs-pre:
    driver: local
  guanajuato-data-pre:
    driver: local
  guanajuato-logs-pro:
    driver: local
  guanajuato-data-pro:
    driver: local
  
  # Volúmenes para base de datos
  sqlserver-data:
    driver: local
    
  # Volúmenes para SonarQube
  sonarqube-conf:
    driver: local
  sonarqube-data:
    driver: local
  sonarqube-logs:
    driver: local
  sonarqube-extensions:
    driver: local
  sonarqube-db-data:
    driver: local

networks:
  guanajuato-network:
    driver: bridge
    name: guanajuato-network
